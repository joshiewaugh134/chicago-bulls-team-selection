c_team_stats <- team_stats2 %>%
select(Team:G, FGp, X2P, TRB) %>%
mutate(RPG = (TRB/G),
RBX2P = (X2P/TRB)) %>%
mutate_at(vars(RPG, RBX2P), funs(round(., 3))) %>%
arrange(desc(RBX2P))
best_c_RBX2P <- ind_stats %>%           #Table shows PF players in top 5 teams for RBX2P and compared to Montrezl Harrell
select(Player:G, X2P, TRB, Salary) %>%
filter(Pos == "C", Tm %in% c("PHO", "IND", "WAS", "SAS", "CHI")) %>%
mutate(RBX2P = (X2P/TRB)) %>%
mutate_at(vars(RBX2P), funs(round(., 3)))
montrezl_harrell <- c_data %>%
select(Player:G, X2P, TRB, Salary, RBX2P) %>%
filter(Player == "Montrezl Harrell")
best_c_RBX2P <- best_c_RBX2P %>%      #Compared ____ to players in teams found above
rbind(montrezl_harrell) %>%
arrange(desc(RBX2P))
#Selected Team -----
selected_team <- ind_stats %>%
filter(Player %in% c("Monte Morris", "Donovan Mitchell", "Kevin Durant", "Kyle Kuzma",
"Montrezl Harrell")) %>%
select(Player:G, FG:X2Pp, FT:FTp, ORB:AST, BLK:TOV, PTS, PTS_per_game:Salary) %>%
mutate(ATTOVR = (AST/TOV),
PTS_A = ((X3PA*3)+(X2PA*2)+(FTA*1)),
PTS_P = (PTS/PTS_A),
RBX2P = (X2P/TRB),
RPG = (TRB/G),
AST_per_game = (AST/G),
PTS_per_1000_dollars = (PTS/(Salary/1000))) %>%
mutate_at(vars(ATTOVR, PTS_P, RBX2P, RPG, AST_per_game, PTS_per_1000_dollars), funs(round(., 3)))
selected_team <- selected_team %>%
select(Player:G, FG:FTp, ORB:TRB, RBX2P, RPG, AST, AST_per_game, TOV, ATTOVR, BLK, PTS, PTS_A:PTS_P,
PTS_per_game:Salary, PTS_per_1000_dollars)
pg_data %>%    # Graph of ATTOVR for all players
ggplot() +
geom_point(mapping = aes(x = ATTOVR, y = PTS_per_game, colour = Player)) +
theme_classic() +
labs(title = "Relationship between Assists and Turnovers",
subtitle = "Trend shows that as assists rise, so do turnovers",
caption = "Data sourced from basketball-reference.com",
x = "ATTOVR",
y = "Points per game",
colour = "ATTOVR")
ggplot(data = team_stats2, aes(x = ATTOVR, y = (PTS/G))) + # Graph of ATTOVR for teams
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
scale_x_continuous(limits = c(1.4, 2.1),
breaks = seq(1.4, 2.1, by = 0.1)) +
scale_y_continuous(limits = c(102, 119),
breaks = seq(102, 119, by = 1)) +
theme_classic() +
labs(title = "Relationship between ATTOVR and Points Scored in a game",
subtitle = "A higher ATTOVR generally leads to more points",
caption = "Data sourced from basketball-reference.com",
x = "Assist to Turnover Ratio",
y = "Points scored in a game")
ind_stats %>%    # 2-Point Goals per game vs Points per game
ggplot() +
geom_point(mapping = aes(x = (X2P/G), y = (PTS/G), colour = (X2P/G))) +
scale_colour_gradient(low = "firebrick1", high = "black") +
scale_x_continuous(limits = c(0, 10),
breaks = seq(0, 10, by = 2.5)) +
scale_y_continuous(limits = c(0, 40),
breaks = seq(0, 40, by = 10)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "2-Point Goals highest indicator of Points per game",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals per Game",
y = "Points per Game",
colour = "2-Point Goals per Game")
ggplot(data = team_stats2, aes(x = (X2P/G), y = (PTS/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Points Per Game")
ind_stats %>%     # Rebounds to 2-Point Goal Ratio
ggplot() +
geom_point(mapping = aes(x = (X2P/G), y = (TRB/G), colour = (X2P/G))) +
scale_colour_gradient(low = "firebrick1", high = "black") +
scale_x_continuous(limits = c(0, 10),
breaks = seq(0, 10, by = 2)) +
scale_y_continuous(limits = c(0, 14),
breaks = seq(0, 14, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "Players tend to score more 2-Point goals when they have more rebounds",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals per Game",
y = "Rebounds per Game",
colour = "2-Point Goals per Game")
ggplot(data = team_stats2, aes(x = (TRB/G), y = (X2P/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Rebounds Per Game")
ggplot(data = team_stats2, aes(x = ATTOVR, y = (PTS/G))) + # Graph of ATTOVR for teams
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
scale_x_continuous(limits = c(1.4, 2.1),
breaks = seq(1.4, 2.1, by = 0.2)) +
scale_y_continuous(limits = c(102, 119),
breaks = seq(102, 119, by = 2)) +
theme_classic() +
labs(title = "Relationship between ATTOVR and Points Scored in a game",
subtitle = "A higher ATTOVR generally leads to more points",
caption = "Data sourced from basketball-reference.com",
x = "Assist to Turnover Ratio",
y = "Points scored in a game")
ind_stats %>%    # 2-Point Goals per game vs Points per game
ggplot() +
geom_point(mapping = aes(x = (X2P/G), y = (PTS/G), colour = (X2P/G))) +
scale_colour_gradient(low = "firebrick1", high = "black") +
scale_x_continuous(limits = c(0, 10),
breaks = seq(0, 10, by = 2.5)) +
scale_y_continuous(limits = c(0, 40),
breaks = seq(0, 40, by = 10)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "2-Point Goals highest indicator of Points per game",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals per Game",
y = "Points per Game",
colour = "2-Point Goals per Game")
ggplot(data = team_stats2, aes(x = (X2P/G), y = (PTS/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Points Per Game")
ind_stats %>%     # Rebounds to 2-Point Goal Ratio
ggplot() +
geom_point(mapping = aes(x = (X2P/G), y = (TRB/G), colour = (X2P/G))) +
scale_colour_gradient(low = "firebrick1", high = "black") +
scale_x_continuous(limits = c(0, 10),
breaks = seq(0, 10, by = 2)) +
scale_y_continuous(limits = c(0, 14),
breaks = seq(0, 14, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "Players tend to score more 2-Point goals when they have more rebounds",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals per Game",
y = "Rebounds per Game",
colour = "2-Point Goals per Game")
ggplot(data = team_stats2, aes(x = (TRB/G), y = (X2P/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Rebounds Per Game")
ggplot(data = team_stats2, aes(x = (X2P/G), y = (PTS/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
scale_x_continuous(limits = c(22, 36),
breaks = seq(22, 36, by = 2)) +
scale_y_continuous(limits = c(102, 118),
breaks = seq(102, 118, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Points Per Game")
ggplot(data = team_stats2, aes(x = (X2P/G), y = (PTS/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
scale_x_continuous(limits = c(22, 35),
breaks = seq(22, 35, by = 2)) +
scale_y_continuous(limits = c(102, 119),
breaks = seq(102, 119, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Points Per Game")
ggplot(data = team_stats2, aes(x = (X2P/G), y = (PTS/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
scale_x_continuous(limits = c(22, 35),
breaks = seq(22, 35, by = 2)) +
scale_y_continuous(limits = c(102, 120),
breaks = seq(102, 120, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Points Per Game")
ggplot(data = team_stats2, aes(x = (X2P/G), y = (PTS/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
scale_x_continuous(limits = c(23, 35),
breaks = seq(23, 35, by = 2)) +
scale_y_continuous(limits = c(102, 120),
breaks = seq(102, 120, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Points Per Game")
ind_stats %>%     # Rebounds to 2-Point Goal Ratio
ggplot() +
geom_point(mapping = aes(x = (X2P/G), y = (TRB/G), colour = (X2P/G))) +
scale_colour_gradient(low = "firebrick1", high = "black") +
scale_x_continuous(limits = c(0, 10),
breaks = seq(0, 10, by = 2)) +
scale_y_continuous(limits = c(0, 14),
breaks = seq(0, 14, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "Players tend to score more 2-Point goals when they have more rebounds",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals per Game",
y = "Rebounds per Game",
colour = "2-Point Goals per Game")
ggplot(data = team_stats2, aes(x = (TRB/G), y = (X2P/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Rebounds Per Game")
ggplot(data = team_stats2, aes(x = ATTOVR, y = (PTS/G))) + # Graph of ATTOVR for teams
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
scale_x_continuous(limits = c(1.4, 2.1),
breaks = seq(1.4, 2.1, by = 0.2)) +
scale_y_continuous(limits = c(102, 119),
breaks = seq(102, 119, by = 2)) +
theme_classic() +
labs(title = "Relationship between ATTOVR and Points Scored in a game",
subtitle = "A higher ATTOVR generally leads to more points",
caption = "Data sourced from basketball-reference.com",
x = "Assist to Turnover Ratio",
y = "Points scored in a game")
ind_stats %>%    # 2-Point Goals per game vs Points per game
ggplot() +
geom_point(mapping = aes(x = (X2P/G), y = (PTS/G), colour = (X2P/G))) +
scale_colour_gradient(low = "firebrick1", high = "black") +
scale_x_continuous(limits = c(0, 10),
breaks = seq(0, 10, by = 2.5)) +
scale_y_continuous(limits = c(0, 40),
breaks = seq(0, 40, by = 10)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Points Scored per Game",
subtitle = "2-Point Goals highest indicator of Points per game",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals per Game",
y = "Points per Game",
colour = "2-Point Goals per Game")
ind_stats %>%     # Rebounds to 2-Point Goal Ratio
ggplot() +
geom_point(mapping = aes(x = (X2P/G), y = (TRB/G), colour = (X2P/G))) +
scale_colour_gradient(low = "firebrick1", high = "black") +
scale_x_continuous(limits = c(0, 10),
breaks = seq(0, 10, by = 2)) +
scale_y_continuous(limits = c(0, 14),
breaks = seq(0, 14, by = 2)) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "Players tend to score more 2-Point goals when they have more rebounds",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals per Game",
y = "Rebounds per Game",
colour = "2-Point Goals per Game")
ggplot(data = team_stats2, aes(x = (TRB/G), y = (X2P/G))) + # Graph of ATTOVR for all players
geom_point() +
geom_text(aes(label = TmShort), nudge_y = 0.5, size = 2.5) +
theme_classic() +
labs(title = "Relationship between 2-Point Goals per Game and Rebounds per Game",
subtitle = "<enter text>",
caption = "Data sourced from basketball-reference.com",
x = "2-Point Goals Per Game",
y = "Rebounds Per Game")
library(tidyverse)
#Load data into project ----------
ind_stats <- read.csv("data/raw/2018-19_nba_player_statistics.csv")
salaries <- read.csv("data/raw/2018-19_nba_player-salaries.csv")
team_stats1 <- read.csv("data/raw/2018-19_nba_team_statistics_1.csv")
team_stats2 <- read.csv("data/raw/2018-19_nba_team_statistics_2.csv")
#Renaming columns in data files --------
ind_stats <- rename(ind_stats,
FGp = 'FG.', X3Pp = 'X3P.', X2Pp = 'X2P.', eFGp = 'eFG.',
FTp = 'FT.', Player = 'ï..player_name')
salaries <- salaries %>%
rename(player_id = 'ï..player_id', Player = 'player_name', Salary = 'salary') %>%
select(Player:Salary)
salaries[,c("X","X.1","X.2", "X.3")] <- list(NULL)
team_stats1 <- team_stats1 %>%
rename(Rk = 'ï..Rk', TSp = 'TS.', eFGp = 'eFG.', TOVp = 'TOV.', ORBp = 'ORB.', DRBp = 'DRB.')
team_stats1[,c("X","X.1","X.2")] <- list(NULL)
team_short <- data.frame("TmShort" = c("MIL", "GSW", "NOP", "PHI", "LAC", "POR", "OKC", "TOR", "SAC", "WAS", "HOU", "ATL",
"MIN", "BOS", "BRK", "LAL", "UTA", "SAS", "CHO", "DEN", "DAL", "IND", "PHO", "ORL",
"DET", "MIA", "CHI", "NYK", "CLE", "MEM"))
team_stats2 <- bind_cols(team_stats2, team_stats1[c(4:5)], team_short)
team_stats2 <- team_stats2 %>%
rename(FGp = 'FG.', X3Pp = 'X3P.', X2Pp = 'X2P.', FTp = 'FT.', Rk = 'ï..Rk') %>%
mutate(ATTOVR = (AST/TOV)) %>%
mutate_at(vars(ATTOVR), funs(round(., 3))) %>%
select(Rk:Team, TmShort, G, W:L, FG:PTS, ATTOVR)
#Tidying ind_stats data by combining duplicates of players by team or position into same row and adding variables -----
ind_stats <- filter(ind_stats, Tm != "TOT") #Removing when Tm = TOT, as it means TOTAL if player is in >1 team
ind_stats <- data.frame(stringsAsFactors = FALSE, ind_stats)
ind_stats <- ind_stats %>%
group_by(Player, Age, Pos) %>%
summarise(Tm = paste(Tm, collapse = ", "), G = sum(G), GS = sum(GS), MP = sum(MP), FG = sum(FG), FGA = sum(FGA),
FGp = (FG/FGA), X3P = sum (X3P), X3PA = sum(X3PA), X3Pp = (X3P/X3PA), X2P = sum(X2P), X2PA = sum(X2PA),
X2Pp = (X2P/X2PA), eFGp = ((FG + (0.5*X3P))/(FGA)), FT = sum(FT), FTA = sum(FTA), FTp = (FT/FTA),
ORB = sum(ORB), DRB = sum(DRB), TRB = sum(TRB), AST = sum(AST), STL = sum(STL), BLK = sum(BLK),
TOV = sum(TOV), PF = sum(PF), PTS = sum(PTS), FTF = (FTA/FGA), PTS_per_game = (PTS / G), FTF = (FTA/FGA),
PTS_per_min = (PTS / MP))
ind_stats <- ind_stats %>%
group_by(Player, Age) %>%
summarise(Pos = paste(Pos, collapse = ", "), Tm = paste(Tm, collapse = ", "), G = sum(G), GS = sum(GS), MP = sum(MP),
FG = sum(FG), FGA = sum(FGA), FGp = (FG/FGA), X3P = sum (X3P), X3PA = sum(X3PA),
X3Pp = (X3P/X3PA), X2P = sum(X2P), X2PA = sum(X2PA), X2Pp = (X2P/X2PA),
eFGp = ((FG + (0.5*X3P))/(FGA)), FT = sum(FT), FTA = sum(FTA), FTp = (FT/FTA),
ORB = sum(ORB), DRB = sum(DRB), TRB = sum(TRB), AST = sum(AST), STL = sum(STL),
BLK = sum(BLK), TOV = sum(TOV), PF = sum(PF), PTS = sum(PTS), FTF = (FTA/FGA),
PTS_per_game = (PTS / G), FTF = (FTA/FGA), PTS_per_min = (PTS/MP))
ind_stats <- full_join(x = ind_stats, y = salaries) %>%
drop_na()
ind_stats <- ind_stats %>%
data.frame(stringsAsFactors = FALSE, ind_stats) %>%
select(Player:Salary) %>%
mutate(
ORB_z = (ORB - mean(ORB)) / sd(ORB),
ORB_category = if_else(condition = ORB_z < 0,
true = "below average", false = "above average"),
DRB_z = (DRB - mean(DRB)) / sd(DRB),
DRB_category = if_else(condition = DRB_z < 0,
true = "below average", false = "above average"),
TRB_z = (TRB - mean(DRB)) / sd(TRB),
TRB_category = if_else(condition = TRB_z < 0,
true = "below average", false = "above average"),
AST_z = (AST - mean(AST)) / sd(AST),
AST_category = if_else(condition = AST_z <0,
true = "below average", false = "above average"),
BLK_z = (BLK - mean(BLK)) / sd(BLK),
BLK_category = if_else(condition = BLK_z <0,
true = "below average", false = "above average")) %>%
arrange(str_extract(Player,'\\s.*$')) %>%
mutate_at(vars(FGp, X3Pp, X2Pp, eFGp, FTp, FTF, PTS_per_game, PTS_per_min, ORB_z, DRB_z, TRB_z,
AST_z, BLK_z), funs(round(., 3)))
library(tidyverse)
#Load data into project ----------
ind_stats <- read.csv("data/raw/2018-19_nba_player_statistics.csv")
salaries <- read.csv("data/raw/2018-19_nba_player-salaries.csv")
team_stats1 <- read.csv("data/raw/2018-19_nba_team_statistics_1.csv")
team_stats2 <- read.csv("data/raw/2018-19_nba_team_statistics_2.csv")
#Renaming columns in data files --------
ind_stats <- rename(ind_stats,
FGp = 'FG.', X3Pp = 'X3P.', X2Pp = 'X2P.', eFGp = 'eFG.',
FTp = 'FT.', Player = 'ï..player_name')
salaries <- salaries %>%
rename(player_id = 'ï..player_id', Player = 'player_name', Salary = 'salary') %>%
select(Player:Salary)
salaries[,c("X","X.1","X.2", "X.3")] <- list(NULL)
team_stats1 <- team_stats1 %>%
rename(Rk = 'ï..Rk', TSp = 'TS.', eFGp = 'eFG.', TOVp = 'TOV.', ORBp = 'ORB.', DRBp = 'DRB.')
team_stats1[,c("X","X.1","X.2")] <- list(NULL)
team_short <- data.frame("TmShort" = c("MIL", "GSW", "NOP", "PHI", "LAC", "POR", "OKC", "TOR", "SAC", "WAS", "HOU", "ATL",
"MIN", "BOS", "BRK", "LAL", "UTA", "SAS", "CHO", "DEN", "DAL", "IND", "PHO", "ORL",
"DET", "MIA", "CHI", "NYK", "CLE", "MEM"))
team_stats2 <- bind_cols(team_stats2, team_stats1[c(4:5)], team_short)
team_stats2 <- team_stats2 %>%
rename(FGp = 'FG.', X3Pp = 'X3P.', X2Pp = 'X2P.', FTp = 'FT.', Rk = 'ï..Rk') %>%
mutate(ATTOVR = (AST/TOV)) %>%
mutate_at(vars(ATTOVR), funs(round(., 3))) %>%
select(Rk:Team, TmShort, G, W:L, FG:PTS, ATTOVR)
#Tidying ind_stats data by combining duplicates of players by team or position into same row and adding variables -----
ind_stats <- filter(ind_stats, Tm != "TOT") #Removing when Tm = TOT, as it means TOTAL if player is in >1 team
ind_stats <- data.frame(stringsAsFactors = FALSE, ind_stats)
ind_stats <- ind_stats %>%
group_by(Player, Age, Pos) %>%
summarise(Tm = paste(Tm, collapse = ", "), G = sum(G), GS = sum(GS), MP = sum(MP), FG = sum(FG), FGA = sum(FGA),
FGp = (FG/FGA), X3P = sum (X3P), X3PA = sum(X3PA), X3Pp = (X3P/X3PA), X2P = sum(X2P), X2PA = sum(X2PA),
X2Pp = (X2P/X2PA), eFGp = ((FG + (0.5*X3P))/(FGA)), FT = sum(FT), FTA = sum(FTA), FTp = (FT/FTA),
ORB = sum(ORB), DRB = sum(DRB), TRB = sum(TRB), AST = sum(AST), STL = sum(STL), BLK = sum(BLK),
TOV = sum(TOV), PF = sum(PF), PTS = sum(PTS), FTF = (FTA/FGA), PTS_per_game = (PTS / G), FTF = (FTA/FGA),
PTS_per_min = (PTS / MP))
ind_stats <- ind_stats %>%
group_by(Player, Age) %>%
summarise(Pos = paste(Pos, collapse = ", "), Tm = paste(Tm, collapse = ", "), G = sum(G), GS = sum(GS), MP = sum(MP),
FG = sum(FG), FGA = sum(FGA), FGp = (FG/FGA), X3P = sum (X3P), X3PA = sum(X3PA),
X3Pp = (X3P/X3PA), X2P = sum(X2P), X2PA = sum(X2PA), X2Pp = (X2P/X2PA),
eFGp = ((FG + (0.5*X3P))/(FGA)), FT = sum(FT), FTA = sum(FTA), FTp = (FT/FTA),
ORB = sum(ORB), DRB = sum(DRB), TRB = sum(TRB), AST = sum(AST), STL = sum(STL),
BLK = sum(BLK), TOV = sum(TOV), PF = sum(PF), PTS = sum(PTS), FTF = (FTA/FGA),
PTS_per_game = (PTS / G), FTF = (FTA/FGA), PTS_per_min = (PTS/MP))
ind_stats <- full_join(x = ind_stats, y = salaries) %>%
drop_na()
ind_stats <- ind_stats %>%
data.frame(stringsAsFactors = FALSE, ind_stats) %>%
select(Player:Salary) %>%
mutate(
ORB_z = (ORB - mean(ORB)) / sd(ORB),
ORB_category = if_else(condition = ORB_z < 0,
true = "below average", false = "above average"),
DRB_z = (DRB - mean(DRB)) / sd(DRB),
DRB_category = if_else(condition = DRB_z < 0,
true = "below average", false = "above average"),
TRB_z = (TRB - mean(DRB)) / sd(TRB),
TRB_category = if_else(condition = TRB_z < 0,
true = "below average", false = "above average"),
AST_z = (AST - mean(AST)) / sd(AST),
AST_category = if_else(condition = AST_z <0,
true = "below average", false = "above average"),
BLK_z = (BLK - mean(BLK)) / sd(BLK),
BLK_category = if_else(condition = BLK_z <0,
true = "below average", false = "above average")) %>%
arrange(str_extract(Player,'\\s.*$')) %>%
mutate_at(vars(FGp, X3Pp, X2Pp, eFGp, FTp, FTF, PTS_per_game, PTS_per_min, ORB_z, DRB_z, TRB_z,
AST_z, BLK_z), funs(round(., 3)))
View(ind_stats)
View(ind_stats)
View(ind_stats)
library(tidyverse)
#Load data into project ----------
ind_stats <- read.csv("data/raw/2018-19_nba_player_statistics.csv")
salaries <- read.csv("data/raw/2018-19_nba_player-salaries.csv")
team_stats1 <- read.csv("data/raw/2018-19_nba_team_statistics_1.csv")
team_stats2 <- read.csv("data/raw/2018-19_nba_team_statistics_2.csv")
#Renaming columns in data files --------
ind_stats <- rename(ind_stats,
FGp = 'FG.', X3Pp = 'X3P.', X2Pp = 'X2P.', eFGp = 'eFG.',
FTp = 'FT.', Player = 'ï..player_name')
salaries <- salaries %>%
rename(player_id = 'ï..player_id', Player = 'player_name', Salary = 'salary') %>%
select(Player:Salary)
salaries[,c("X","X.1","X.2", "X.3")] <- list(NULL)
team_stats1 <- team_stats1 %>%
rename(Rk = 'ï..Rk', TSp = 'TS.', eFGp = 'eFG.', TOVp = 'TOV.', ORBp = 'ORB.', DRBp = 'DRB.')
team_stats1[,c("X","X.1","X.2")] <- list(NULL)
team_short <- data.frame("TmShort" = c("MIL", "GSW", "NOP", "PHI", "LAC", "POR", "OKC", "TOR", "SAC", "WAS", "HOU", "ATL",
"MIN", "BOS", "BRK", "LAL", "UTA", "SAS", "CHO", "DEN", "DAL", "IND", "PHO", "ORL",
"DET", "MIA", "CHI", "NYK", "CLE", "MEM"))
team_stats2 <- bind_cols(team_stats2, team_stats1[c(4:5)], team_short)
team_stats2 <- team_stats2 %>%
rename(FGp = 'FG.', X3Pp = 'X3P.', X2Pp = 'X2P.', FTp = 'FT.', Rk = 'ï..Rk') %>%
mutate(ATTOVR = (AST/TOV)) %>%
mutate_at(vars(ATTOVR), funs(round(., 3))) %>%
select(Rk:Team, TmShort, G, W:L, FG:PTS, ATTOVR)
#Tidying ind_stats data by combining duplicates of players by team or position into same row and adding variables -----
ind_stats <- filter(ind_stats, Tm != "TOT") #Removing when Tm = TOT, as it means TOTAL if player is in >1 team
ind_stats <- data.frame(stringsAsFactors = FALSE, ind_stats)
ind_stats <- ind_stats %>%
group_by(Player, Age, Pos) %>%
summarise(Tm = paste(Tm, collapse = ", "), G = sum(G), GS = sum(GS), MP = sum(MP), FG = sum(FG), FGA = sum(FGA),
FGp = (FG/FGA), X3P = sum (X3P), X3PA = sum(X3PA), X3Pp = (X3P/X3PA), X2P = sum(X2P), X2PA = sum(X2PA),
X2Pp = (X2P/X2PA), eFGp = ((FG + (0.5*X3P))/(FGA)), FT = sum(FT), FTA = sum(FTA), FTp = (FT/FTA),
ORB = sum(ORB), DRB = sum(DRB), TRB = sum(TRB), AST = sum(AST), STL = sum(STL), BLK = sum(BLK),
TOV = sum(TOV), PF = sum(PF), PTS = sum(PTS), FTF = (FTA/FGA), PTS_per_game = (PTS / G), FTF = (FTA/FGA),
PTS_per_min = (PTS / MP))
ind_stats <- ind_stats %>%
group_by(Player, Age) %>%
summarise(Pos = paste(Pos, collapse = ", "), Tm = paste(Tm, collapse = ", "), G = sum(G), GS = sum(GS), MP = sum(MP),
FG = sum(FG), FGA = sum(FGA), FGp = (FG/FGA), X3P = sum (X3P), X3PA = sum(X3PA),
X3Pp = (X3P/X3PA), X2P = sum(X2P), X2PA = sum(X2PA), X2Pp = (X2P/X2PA),
eFGp = ((FG + (0.5*X3P))/(FGA)), FT = sum(FT), FTA = sum(FTA), FTp = (FT/FTA),
ORB = sum(ORB), DRB = sum(DRB), TRB = sum(TRB), AST = sum(AST), STL = sum(STL),
BLK = sum(BLK), TOV = sum(TOV), PF = sum(PF), PTS = sum(PTS), FTF = (FTA/FGA),
PTS_per_game = (PTS / G), FTF = (FTA/FGA), PTS_per_min = (PTS/MP))
ind_stats <- full_join(x = ind_stats, y = salaries) %>%
drop_na()
ind_stats <- ind_stats %>%
data.frame(stringsAsFactors = FALSE, ind_stats) %>%
select(Player:Salary) %>%
mutate(
ORB_z = (ORB - mean(ORB)) / sd(ORB),
ORB_category = if_else(condition = ORB_z < 0,
true = "below average", false = "above average"),
DRB_z = (DRB - mean(DRB)) / sd(DRB),
DRB_category = if_else(condition = DRB_z < 0,
true = "below average", false = "above average"),
TRB_z = (TRB - mean(DRB)) / sd(TRB),
TRB_category = if_else(condition = TRB_z < 0,
true = "below average", false = "above average"),
AST_z = (AST - mean(AST)) / sd(AST),
AST_category = if_else(condition = AST_z <0,
true = "below average", false = "above average"),
BLK_z = (BLK - mean(BLK)) / sd(BLK),
BLK_category = if_else(condition = BLK_z <0,
true = "below average", false = "above average")) %>%
arrange(str_extract(Player,'\\s.*$')) %>%
mutate_at(vars(FGp, X3Pp, X2Pp, eFGp, FTp, FTF, PTS_per_game, PTS_per_min, ORB_z, DRB_z, TRB_z,
AST_z, BLK_z), funs(round(., 3)))
View(ind_stats)
write.csv(ind_stats, '2018-19_nba_player_statistics_tidy.csv')
write.csv(salaries, '2018-19_nba_player-salaries-tidy.csv')
write.csv(team_stats1, '2018-19_nba_team_statistics_1_tidy.csv')
write.csv(salaries, '2018-19_nba_player-salaries_tidy.csv')
write.csv(team_stats2, '2018-19_nba_team_statistics_2_tidy.csv')
